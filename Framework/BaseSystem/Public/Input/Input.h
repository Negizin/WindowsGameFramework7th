/*! =====================================================================================
@file		Input.h
@brief		入力システムのデータへのアクセスをゲーム実装部に提供するメソッドをまとめた名前空間によるインターフェース
@author		Takuya Kawakami
@date		2016.11.03	新規作成
====================================================================================== */
#pragma once

namespace Input {

	/*! =====================================================================================
	@brief	キーボード：キーが押し続けられている状態を取得
	@param	状態を確認したいキーのマスク（KCODEの名前空間を参照してください）
	@return bool
	====================================================================================== */
	bool	GetKeyHold(unsigned	long long KCODE_MASK);
	/*! =====================================================================================
	@brief	キーボード：キーが押された瞬間の状態を判定
	@param	状態を確認したいキーのマスク（KCODEの名前空間を参照してください）
	@return bool
	====================================================================================== */
	bool	GetKeyTrigger(unsigned	long long KCODE_MASK);
	/*! =====================================================================================
	@brief	キーボード：キーが離された瞬間の状態を判定
	@param	状態を確認したいキーのマスク（KCODEの名前空間を参照してください）
	@return bool
	====================================================================================== */
	bool	GetKeyRelease(unsigned	long long KCODE_MASK);


	/*! =====================================================================================
	@brief	コントローラ：ボタンが押し続けられている状態を判定
	@param	０〜３のコントローラ番号
	@param	状態を確認したいボタンのマスク（XCODEの名前空間を参照してください）
	@return bool
	====================================================================================== */
	bool	GetPadHold(int controller_n, int XCODE_MASK);
	/*! =====================================================================================
	@brief	コントローラ：ボタンが押された瞬間の状態を判定
	@param	０〜３のコントローラ番号
	@param	状態を確認したいボタンのマスク（XCODEの名前空間を参照してください）
	@return bool
	====================================================================================== */
	bool	GetPadTrigger(int controller_n, int XCODE_MASK);
	/*! =====================================================================================
	@brief	コントローラ：ボタンが離された瞬間の状態を判定
	@param	０〜３のコントローラ番号
	@param	状態を確認したいボタンのマスク（XCODEの名前空間を参照してください）
	@return bool
	====================================================================================== */
	bool	GetPadRelease(int controller_n, int XCODE_MASK);
	/*! =====================================================================================
	@brief	XBOXコントローラ：左スティックのX軸の値を取得
	@param	0〜3のコントローラ番号
	@return -1.0 ~ 1.0
	====================================================================================== */
	float	GetPadAxisLX(int controller_n);
	/*! =====================================================================================
	@brief	XBOXコントローラ：左スティックのY軸の値を取得
	@param	0〜3のコントローラ番号
	@return -1.0 ~ 1.0
	====================================================================================== */
	float	GetPadAxisLY(int controller_n);
	/*! =====================================================================================
	@brief	XBOXコントローラ：右スティックのX軸の値を取得
	@param	0〜3のコントローラ番号
	@return -1.0 ~ 1.0
	====================================================================================== */
	float	GetPadAxisRX(int controller_n);
	/*! =====================================================================================
	@brief	XBOXコントローラ：右スティックのY軸の値を取得
	@param	0〜3のコントローラ番号
	@return -1.0 ~ 1.0
	====================================================================================== */
	float	GetPadAxisRY(int controller_n);
	/*! =====================================================================================
	@brief	XBOXコントローラ：左トリガーの値を取得
	@param	0〜3のコントローラ番号
	@return -1.0 ~ 1.0
	====================================================================================== */
	float	GetPadLT(int controller_n);
	/*! =====================================================================================
	@brief	XBOXコントローラ：右トリガーの値を取得
	@param	0〜3のコントローラ番号
	@return -1.0 ~ 1.0
	====================================================================================== */
	float	GetPadRT(int controller_n);

}
