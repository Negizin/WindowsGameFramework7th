/*! =====================================================================================
@file		GameObject.h
@brief		ゲームオブジェクト基底クラス
@author		Takuya Kawakami
@date		2016.11.06	新規作成
====================================================================================== */
#pragma once
#include	"../BaseSystem/Public/Common/Common.h"		//共通ユーティリティの使用
#include	"../BaseSystem/Public/Input/Input.h"		//入力インターフェースの使用
#include	"../BaseSystem/Public/Timer/Timer.h"		//タイマーインターフェースの使用
#include	"../Utilities/Math/Math.h"					//数学系ユーティリティの使用
#include	"../ComponentClasses/Transform/Transform.h"	//トランスフォームコンポーネント
//
class Collider;
class Renderer;

class GameObject {
public:
	GameObject();
	virtual ~GameObject();

	//Method
	/*! =====================================================================================
	@brief	更新処理	
	
		m_isActiveフラグがtrueのとき、毎フレーム呼び出される関数。

	====================================================================================== */
	virtual	void	Update() = 0;
	/*! =====================================================================================
	@brief	衝突処理	
	
		「m_isActive が true」かつ「m_pCollider が nullptrでない」場合、衝突判定が行われる。
		衝突判定により衝突が検知された場合、この関数が呼び出される。

	@param	Collider*：衝突対象のコライダーコンポーネント
	====================================================================================== */
	virtual	void	OnCollision(Collider*	_pOther);

	//Setter
	/*! =====================================================================================
	@brief	オブジェクトの更新処理を行うフラグの操作(セットされているコンポーネントも一括で操作)
	@param	bool：true＝更新ON
	====================================================================================== */
	void	Activate(bool _flg);
	/*! =====================================================================================
	@brief	オブジェクトの衝突判定を行うフラグの操作
	@param	bool：true＝衝突ON
	====================================================================================== */
	void	ActivateCollider(bool _flg);
	/*! =====================================================================================
	@brief	オブジェクトの描画処理を行うフラグの操作
	@param	bool：true＝描画ON
	====================================================================================== */
	void	ActivateRenderer(bool _flg);

	//Getter
	/*! =====================================================================================
	@brief	オブジェクトの更新処理を行うフラグの取得
	@param	bool：true＝更新ON
	====================================================================================== */
	bool		GetActiveFlg() const;
	/*! =====================================================================================
	@brief	オブジェクトのコライダーを取得
	@param	bool：true＝更新ON
	====================================================================================== */
	Collider*	GetComponentCollider() const;
	/*! =====================================================================================
	@brief	オブジェクトのレンダラーを取得
	@param	bool：true＝更新ON
	====================================================================================== */
	Renderer*	GetComponentRenderer() const;

protected:
	bool		m_isActive;		//オブジェクトの処理を行う：true
	Transform	m_transform;	//トランスフォーム：[拡縮/回転/移動]変換用コンポーネント
	Collider*	m_pCollider;	//コライダー：衝突用コンポーネント（衝突なし＝nullptr）
	Renderer*	m_pRenderer;	//レンダラー：描画用コンポーネント（描画なし＝nullptr）
};